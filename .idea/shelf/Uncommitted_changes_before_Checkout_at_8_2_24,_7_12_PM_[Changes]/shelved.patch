Index: SenderEmail/src/test/java/com/example/SenderEmail/SenderEmailApplicationTests.java
===================================================================
diff --git a/SenderEmail/src/test/java/com/example/SenderEmail/SenderEmailApplicationTests.java b/SenderEmail/src/test/java/com/example/SenderEmail/SenderEmailApplicationTests.java
deleted file mode 100644
--- a/SenderEmail/src/test/java/com/example/SenderEmail/SenderEmailApplicationTests.java	(revision ac8fbc34378fd6256afd824cc69ac5a72e3b7aed)
+++ /dev/null	(revision ac8fbc34378fd6256afd824cc69ac5a72e3b7aed)
@@ -1,13 +0,0 @@
-package com.example.SenderEmail;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class SenderEmailApplicationTests {
-
-	@Test
-	void contextLoads() {
-	}
-
-}
Index: SenderEmail/src/main/java/com/example/SenderEmail/service/EmailService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.SenderEmail.service;\n\nimport com.example.SenderEmail.exception.ErrorResponse;\nimport com.example.SenderEmail.model.Email;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.mail.SimpleMailMessage;\nimport org.springframework.mail.javamail.JavaMailSender;\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.stereotype.Service;\nimport org.springframework.web.server.ResponseStatusException;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.Future;\nimport java.util.regex.Pattern;\n\n@Service\n@ConfigurationProperties(prefix = \"spring.mail\")\npublic class EmailService {\n\n    private static final Logger logger = LoggerFactory.getLogger(EmailService.class);\n\n    private String username;\n    private final JavaMailSender mailSender;\n\n    @Autowired\n    public EmailService(JavaMailSender mailSender) {\n\n        this.mailSender = mailSender;\n    }\n\n    @Async\n    public Future<ResponseEntity<ErrorResponse>> sendEmail (Email email) {\n\n        isEmailDataValued( email ) ;\n\n        SimpleMailMessage message = new SimpleMailMessage();\n        message.setFrom(username);\n        message.setTo(email.getTo());\n        message.setSubject(email.getSubject());\n        message.setText(email.getBody());\n        mailSender.send(message);\n\n\n        ErrorResponse successResponse = new ErrorResponse(HttpStatus.ACCEPTED.value(), \"The system sent a message.\"  );\n        return CompletableFuture.completedFuture( new ResponseEntity<>(successResponse, HttpStatus.ACCEPTED) ) ;\n\n    }\n\n\n\n    public void isEmailDataValued(Email email ){\n        if (email.getBody() == null || email.getBody().trim().isEmpty() ) {\n            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, \" Error : The body of email is empty\");\n        }\n        if (email.getSubject() == null || email.getSubject().trim().isEmpty()) {\n            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, \" Error : The subject of email is empty\");\n        }\n\n        if (! areValidEmails(email.getTo())) {\n            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, \" Error :One or more recipient email addresses are invalid.\");\n        }\n\n    }\n\n    private boolean areValidEmails(String[] emails) {\n        if (emails == null) {\n            return false;\n        }\n        String emailRegex = \"^[A-Za-z0-9+_.-]+@(.+)$\";\n        Pattern pattern = Pattern.compile(emailRegex);\n        for (String email : emails) {\n            if (!pattern.matcher(email).matches()) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SenderEmail/src/main/java/com/example/SenderEmail/service/EmailService.java b/SenderEmail/src/main/java/com/example/SenderEmail/service/EmailService.java
--- a/SenderEmail/src/main/java/com/example/SenderEmail/service/EmailService.java	(revision ac8fbc34378fd6256afd824cc69ac5a72e3b7aed)
+++ b/SenderEmail/src/main/java/com/example/SenderEmail/service/EmailService.java	(date 1722615067956)
@@ -89,4 +89,9 @@
         this.username = username;
     }
 
+
+    public int add( int x , int y ){
+        return x+ y ;
+    }
+
 }
